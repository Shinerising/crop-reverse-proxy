version: '3'

networks:
  proxy:
    driver: bridge
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  asset-dars:
  asset-dashboard:

services:
  proxy:
    image: ghcr.io/shinerising/crop-reverse-proxy:master
    restart: always
    volumes:
      - /volume1/docker/crop/nginx.conf:/etc/nginx/nginx.conf:ro
      - asset-dars:/usr/share/nginx/asset-dars:ro
      - asset-dashboard:/usr/share/nginx/asset-dashboard:ro
    ports:
      - "3380:80"
      - "33443:443"
    environment:
      - URL_DARS=dars:8376
      - URL_DASHBOARD=dashboard:7344
    networks:
      - proxy
      - frontend

  postgres:
    image: postgres:16-alpine
    restart: always
    environment:
      - POSTGRES_USER=crop
      - POSTGRES_PASSWORD=crop
      - POSTGRES_DB=db_crop
    volumes:
      - /volume1/docker/crop/postgres:/var/lib/postgresql/data
    ports:
      - "15432:5432"
    networks:
      - backend
  
  redis:
    image: redis/redis-stack-server:7.2.0-v5
    restart: always
    volumes:
      - /volume1/docker/crop/redis-stack:/data
    ports:
      - "6379:6379"
    networks:
      - backend

  api:
    image: ghcr.io/shinerising/crop-api:master
    restart: always
    volumes:
      - /volume1/docker/crop/api:/crop-api-app/Config
    ports:
      - "5182:5182"
    environment:
      - DATABASE_URL=Server=postgres;Port=5432;Database=db_crop;User Id=crop;Password=crop;
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=secret
    depends_on:
      - postgres
      - redis
    networks:
      - frontend
      - backend
      
  analysis:
    image: ghcr.io/shinerising/crop-analysis:master
    restart: always
    volumes:
      - /volume1/docker/crop/api:/crop-api-app/Config
    ports:
      - "5182:5182"
    environment:
      - DATABASE_URL=Server=postgres;Port=5432;Database=db_crop;User Id=crop;Password=crop;
    depends_on:
      - postgres
      
  dars:
    image: ghcr.io/shinerising/station-stats:master
    restart: always
    volumes:
      - asset-dars:/App/public
      - /volume1/docker/station-stats/config:/config
      - /volume1/docker/station-stats/station:/station
      - /volume1/docker/station-stats/data:/data
    ports:
      - "8376:8376"
    environment:
      - SERVER_CONFIG=/config/server.xml
      - STATION_CONFIG=/config/station.xml
    deploy:
      resources:
        limits:
          # cpus: "0.5"
          memory: 512M
    networks:
      - frontend

  dashboard:
    image: ghcr.io/shinerising/crop-dashboard:main
    restart: always
    volumes:
      - asset-dashboard:/App/public
    ports:
      - "7344:80"
    deploy:
      resources:
        limits:
          # cpus: "0.5"
          memory: 512M
    tty: true
    networks:
      - frontend
